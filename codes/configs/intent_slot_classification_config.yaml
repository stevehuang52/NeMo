# Intent and Slot classification with pretrained BERT models
# 110M params
name: "nlu_intent_slot_classification"

trainer:
  devices: 1 # the number of gpus, 0 for CPU
  num_nodes: 1
  max_epochs: 50
  max_steps: null # precedence over max_epochs
  accumulate_grad_batches: 1 # accumulates grads every k batches
  precision: 32 # Should be set to 16 for O1 and O2 amp_level to enable the AMP.
  accelerator: gpu
  strategy: ddp
  log_every_n_steps: 1  # Interval of logging.
  val_check_interval: 1.0  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.

  enable_checkpointing: False  # Provided by exp_manager
  logger: false  # Provided by exp_manager

test_only: false

model:
  pretrained: null
  nemo_path: null # filename to save the model and associated artifacts to .nemo file
  data_dir: ??? # /path/to/data
  class_labels:
    intent_labels_file: intent_labels.csv
    slot_labels_file: slot_labels.csv
  class_balancing: null # or weighted_loss
  intent_loss_weight: 0.6 # relation of intent to slot loss in total loss (between 0 to 1)
  pad_label: -1 # if -1 not slot token will be used
  ignore_extra_tokens: false
  ignore_start_end: true # do not use first and last token for slot training

  train_ds:
    prefix: train
    batch_size: 256
    shuffle: true
    num_samples: -1
    num_workers: 8
    drop_last: false
    pin_memory: false

  validation_ds:
    prefix: dev
    batch_size: 128
    shuffle: false
    num_samples: -1
    num_workers: 8
    drop_last: false
    pin_memory: false

  test_ds:
    prefix: test
    batch_size: 128
    shuffle: false
    num_samples: -1
    num_workers: 8
    drop_last: false
    pin_memory: false

  tokenizer:
    tokenizer_name: ${model.language_model.pretrained_model_name} # or sentencepiece
    vocab_file: null # path to vocab file
    tokenizer_model: null # only used if tokenizer is sentencepiece
    special_tokens: null

  language_model:
    max_seq_length: 50
    pretrained_model_name: bert-base-uncased
    lm_checkpoint: null
    config_file: null # json file, precedence over config
    config: null

  head:
    num_output_layers: 2
    fc_dropout: 0.1

  optim:
    name: adam
    lr: 2e-5
    args:
      name: auto
      params:
        weight_decay: 0.001

    sched:
      name: WarmupAnnealing
      iters_per_batch: null # computed at runtime
      max_steps: null # computed at runtime or explicitly set here

      # pytorch lightning args
      monitor: val_loss
      reduce_on_plateau: false

      # scheduler config override
      args:
        name: auto
        params:
          warmup_steps: null
          warmup_ratio: 0.1
          last_epoch: -1

exp_manager:
  exp_dir: null
  name: ${name}
  create_tensorboard_logger: true
  create_checkpoint_callback: true
  checkpoint_callback_params:
    # in case of multiple validation sets, first one is used
    monitor: "val_loss"
    mode: "min"
    save_top_k: 5
    always_save_nemo: True # saves the checkpoints as nemo files instead of PTL checkpoints
    save_best_model: True

  # you need to set these two to True to continue the training
  resume_if_exists: true
  resume_ignore_no_checkpoint: true

  # You may use this section to create a W&B logger
  create_wandb_logger: false
  wandb_logger_kwargs:
    name: ${name}
    project: SLURP_NLU

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
